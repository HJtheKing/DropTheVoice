version: '3.8'

services:
  back:
    image: gbds234/back:latest
    ports:
      - "8080:8080"
    container_name: back
    restart: always
    depends_on:
    - mysql
    - redis
    - mongodb
  front:
    image: gbds234/front:latest
    ports:
      - "3000:80"
    container_name: front
    restart: always
    depends_on:
    - mysql
    - redis
    - mongodb
  mysql:
    image: mysql:8.0
    container_name: mysql-container
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: dropthevoice
      MYSQL_USER: ssafy
      MYSQL_PASSWORD: ssafy
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
  redis:
    image: redis:alpine
    restart: always
    container_name: redis_boot
    command: redis-server --port 6379
    hostname: redis
    ports:
      - 6379:6379

  mongodb:
    image: mongo
    restart: always
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./data/mongodb:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=es-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - elastic

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    networks:
      - elastic
volumes:
  esdata1:
    driver: local
  mysql-data:
networks:
  elastic:
    driver: bridge
